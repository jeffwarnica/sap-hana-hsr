---
- name: Add secondary hostname info to primary - get info
  getent:
    database: hosts
    key: "{{ ansible_hana2_hostname }}"
  when:
    - sap_hana_hsr_role == 'primary'

- name: Add secondary hostname info to primary - add info
  lineinfile:
    path: /etc/hosts
    line: "{{ getent_hosts.keys() | first}} {{ ansible_hana2_hostname }} hana2"
  when:
    - sap_hana_hsr_role == 'primary'

- name: Add primary hostname info to secondary - get info
  getent:
    database: hosts
    key: "{{ ansible_hana1_hostname }}"
  when:
    - sap_hana_hsr_role == 'secondary'

- name: Add primary hostname info to secondary - add info
  lineinfile:
    path: /etc/hosts
    line: "{{ getent_hosts.keys() | first}} {{ ansible_hana1_hostname }} hana1"
  when:
    - sap_hana_hsr_role == 'primary'


- name: Ensure system PKI SSFS store in the secondary Node matches with the primary Node - pulling
  fetch:
    src: "{{ item }}"
    dest: /tmp/
    flat: yes
  loop:
    - /usr/sap/{{ sap_hana_hsr_hana_sid }}/SYS/global/security/rsecssfs/data/SSFS_{{ sap_hana_hsr_hana_sid }}.DAT
    - /usr/sap/{{ sap_hana_hsr_hana_sid }}/SYS/global/security/rsecssfs/key/SSFS_{{ sap_hana_hsr_hana_sid }}.KEY
  when:
    - sap_hana_hsr_role == 'primary'

- name: Ensure system PKI SSFS store in the secondary Node matches with the primary Node - pushing
  copy:
    src: "/tmp/{{ item.file }}"
    dest: "{{ item.path }}{{ item.file }}"
    owner: "{{ sap_hana_hsr_hana_sid | lower }}adm"
    group: sapsys
    mode: '{{ item.mode }}'
  loop:
    - { path: '/usr/sap/{{ sap_hana_hsr_hana_sid }}/SYS/global/security/rsecssfs/data/', file: 'SSFS_{{ sap_hana_hsr_hana_sid }}.DAT', mode: '0600' }
    - { path: '/usr/sap/{{ sap_hana_hsr_hana_sid }}/SYS/global/security/rsecssfs/key/', file: 'SSFS_{{ sap_hana_hsr_hana_sid }}.KEY', mode: '0640' }
  when:
    - sap_hana_hsr_role == 'secondary'

- name: create temporary directory to store the processed template
  tempfile:
    state: directory
    suffix: hanabck
  register: tmpdir

- name: "Process HANA Backup SYSTEM Template"
  template:
    src: "{{ role_path }}/templates/system_backup.j2"
    dest: "{{ tmpdir.path }}/system_backup.sh"
    owner: "{{ sap_hana_hsr_hana_sid | lower }}adm"
    mode: 0755
  when:
    - sap_hana_hsr_role == 'primary'

- name: "Process HANA Backup SID Template"
  template:
    src: "{{ role_path }}/templates/sid_backup.j2"
    dest: "{{ tmpdir.path }}/sid_backup.sh"
    owner: "{{ sap_hana_hsr_hana_sid | lower }}adm"
    mode: 0755
  when:
    - sap_hana_hsr_role == 'primary'

- name: "Process System Replication Template"
  template:
    src: "{{ role_path }}/templates/enable_hsr.j2"
    dest: "{{ tmpdir.path }}/enable_hsr.sh"
    owner: "{{ sap_hana_hsr_hana_sid | lower }}adm"
    mode: 0755
  when:
    - sap_hana_hsr_role == 'primary'

- name: "Process System Replication Register Template"
  template:
    src: "{{ role_path }}/templates/register_hsr.j2"
    dest: "{{ tmpdir.path }}/register_hsr.sh"
    owner: "{{ sap_hana_hsr_hana_sid | lower }}adm"
    mode: 0755
  when:
    - sap_hana_hsr_role == 'secondary'

- name: "Ensure {{ sap_hana_hsr_hana_sid | lower }}adm can execute backup scripts"
  file:
    path: "{{ tmpdir.path }}"
    owner: "{{ sap_hana_hsr_hana_sid | lower }}adm"
    mode: '0755'

- name: Ensure a backup exists for SYSTEM
  command: "{{ tmpdir.path }}/system_backup.sh"
  become: yes
  become_user: "{{ sap_hana_hsr_hana_sid | lower }}adm"
  when:
    - sap_hana_hsr_role == 'primary'

- name: Ensure a backup exists for {{ sap_hana_hsr_hana_sid }}
  command: "{{ tmpdir.path }}/sid_backup.sh"
  become: yes
  become_user: "{{ sap_hana_hsr_hana_sid | lower }}adm"
  when:
    - sap_hana_hsr_role == 'primary'

- name: Enable HANA System Replication in the primary node
  command: "{{ tmpdir.path }}/enable_hsr.sh"
  become: yes
  #become_user: "{{ sap_hana_hsr_hana_sid | lower }}adm"
  async: 45
  poll: 0
  when:
    - sap_hana_hsr_role == 'primary'
  register: hsr_primary

# - name: 'HANA System Replication - check on async task'
#   async_status:
#     jid: "{{ hsr_primary.ansible_job_id }}"
#   register: job_result
#   until: job_result.finished
#   retries: 100
#   delay: 10
- name: Pause for 1 minutes to build app cache
  pause:
    minutes: 1

- name: Ensure HANA instance is stopped in the secondary node
  shell: |
      /usr/sap/{{ sap_hana_hsr_hana_sid | upper }}/HDB{{ sap_hana_hsr_hana_instance_number }}/HDB stop
  args:
    executable: /bin/bash
  become: yes
  become_user: "{{ sap_hana_hsr_hana_sid | lower }}adm"
  register: stopinstance
  changed_when: "'StopSystem' in stopinstance.stdout"
  when:
    - sap_hana_hsr_role == 'secondary'

- name: Register secondary node to HANA System Replication
  command: "{{ tmpdir.path }}/register_hsr.sh"
  become: yes
  #become_user: "{{ sap_hana_hsr_hana_sid | lower }}adm"
  async: 45
  poll: 0
  when:
    - sap_hana_hsr_role == 'secondary'
  register: hsr_secondary

# - name: 'HANA System Replication - check on async task'
#   async_status:
#     jid: "{{ hsr_secondary.ansible_job_id }}"
#   register: job_result
#   until: job_result.finished
#   retries: 100
#   delay: 10

- name: Pause for 1 minutes to build app cache
  pause:
    minutes: 1

- name: Ensure HANA instance is started in the secondary node
  shell: |
      /usr/sap/{{ sap_hana_hsr_hana_sid | upper }}/HDB{{ sap_hana_hsr_hana_instance_number }}/exe/sapcontrol \
      -nr {{ sap_hana_hsr_hana_instance_number }} -function StartSystem
  args:
    executable: /bin/bash
  become: yes
  become_user: "{{ sap_hana_hsr_hana_sid | lower }}adm"
  register: startinstance
  changed_when: "'StartSystem' in startinstance.stdout"
  when:
    - sap_hana_hsr_role == 'secondary'
